#!/usr/bin/env python2

import glob
import sys
import logging
logging.basicConfig(filename = '/dev/null')
sys.path.append('gen-py')
sys.path.insert(0, glob.glob('/home/yaoliu/src_code/local/lib/lib/python2.7/site-packages')[0])

from store import KeyValueStore
from store.ttypes import SystemException, Value


from thrift.transport import TSocket
from thrift.transport import TTransport
from thrift.protocol import TBinaryProtocol
from thrift.server import TServer

from util import read_node_file, halt, Node, Connection, connection_from_node, value_from_string
from time import sleep


#Globals
NODE_FILE = ""


#Helper functions

#TODO write me
def start_console(node_list):
    keepGoing = True
    connection = connection_from_node(node_list[0])
    while keepGoing:
        for n in node_list:
            print n
        
        badInput = True
        while badInput:
            name = raw_input("Please enter the name of the replica you would like to be coordinator:")
            for n in node_list:
                if n.name == name:
                    node = n
                    badInput = False
            
            if badInput:
                print "That replica name does not exist, please try again."

            if not badInput:
                connection = connection_from_node(node)
                connection.open()
                if not connection.is_open():
                    print "That Node is unreachable"
                    badInput = True 
            
        while True:
            command = raw_input(">> ")
            myList = command.split()
            if not myList:
                continue
            if myList[0] == "get":
                try:
                    key = int(myList[1])
                    if myList[2] == "ONE":
                        level = 1
                    elif myList[2] == "TWO":
                        level = 2
                    else:
                        print "Invalid level"
                        continue
                    if key > -1 and key < 256:
                        #get some value from key
                        try:
                            val = connection.client.read(key, level)
                            print val.content
                        except SystemException:
                            print "Consistency Level can not be reached" 
                    else:
                        print "Key value out of range 0 to 255 please."
                except (ValueError, IndexError) as err:
                    print "Invalid input"
                    pass
            elif myList[0] == "put":
                try:
                    key = int(myList[1])
                    val = myList[2]
                    for i in range(3,len(myList) - 1):
                        val += " "
                        val += myList[i]

                    if myList[len(myList) - 1] == "ONE":
                        level = 1
                    elif myList[len(myList) - 1] == "TWO":
                        level = 2
                    else:
                        print "Invalid level"
                        continue

                    if key > -1 and key < 256:
                        #put
                        try:
                            val1 = value_from_string(val, key)
                            connection.client.write(val1, level)
                        except SystemException:
                            print "Consistency Level can not be reached"
                        pass
                    else:
                        print "Key value out of range 0 to 255 please."
                except (ValueError, IndexError) as err:
                    print "Invalid Input"
                    pass
            elif myList[0] == "Quit":
                print "Thank you"
                keepGoing = False
                break
            elif myList[0] == "Done":
                #start_console(node_list)
                break
            else:
                print "I do not recognize that command please try again."

# prints out a usage message
def usage(prog_name):
    msg = "Usage: %s node_file " % (prog_name)
    print(msg)
    sys.exit(1)


def main(args):
    global NODE_FILE

    if len(args) != 2:
        usage(args[0])
    NODE_FILE = args[1]

    node_list = read_node_file(NODE_FILE)
    
    start_console(node_list)


###Main
if __name__ == '__main__':
    args = sys.argv
    main(args)

    
