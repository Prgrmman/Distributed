------------------------------| Design docs for project 4 |------------------------------

Consider this file like a giant scratch space

So far, I have included the follow executable files

> client (for the client duh)
> server (server executable)
> init   (a wrapper script to launch all the servers at once)

example invocation of client:
$> ./client node_file 

example invocation of server:
$> ./server node_file {--hinted-handoff | --read-repair}


An example of the format of node_file can be found in example_node_file

==================================================
We will be using Apache thrift for this project

How to handle node failure:
  I have included a ping rpc call to the KeyValueStore service. All nodes start as
  down. When an RPC between replicas fails, that node will be marked as down. When that
  node comes back up, it will look for its unique log file, replay that log file to get
  back to where it was.

  If we are using hinted handoff:
  When the nodes first start up, it won't contact another replica until a client wants it
  to be a coordinator. Then it will act as coordinator. When the previously down node
  contacts the other nodes, those nodes will send hints to that node

  Question: if a node recovers that was using hinted handoffs, if it receives a hint that
  is older than the data that it has, does it right it?? I want to say "no", but I'm not
  entirely sure.

 
  When a server first starts up, it checks for the existence of it's corresponding log
  file. If that file exists, we assume failure, and replay the log. 
  
Time stamps will produced by a call to time.time() and has type float:
  it is defined as number of seconds (decimal included) since the beginning of UNIX time

It is the clients responsibility to start the servers on the machine that is indicated by
the ip address in the node_file
