#!/usr/bin/env python

import sys
sys.path.append('/home/phao3/protobuf/protobuf-3.4.0/python')
import bank_pb2 as bank
import re
import socket
import transport



def main(args):
    if len(args) < 2:
        print("Usage: %s initial_balance branch_file" %(args[0]))
        sys.exit(1)

    balance = int(args[1])
    branch_file = args[2]

    branches = []
    regex = r'(.*?)\s(.*?)\s(.*)'
    with open(branch_file, "r") as file:
        for line in file:
            matches = re.match(regex, line, re.M | re.I )

            branch = bank.InitBranch.Branch()
            branch.name = matches.group(1)
            branch.ip = matches.group(2).strip()
            branch.port = int(matches.group(3).strip())
            branches.append(branch)


    start_balance = balance // len(branches)

    for i in range(len(branches)):
        current_branch = branches[i]
        other_branches = branches[:i] + branches[i+1:]
        init_branch(current_branch, start_balance, other_branches)

# init a branch with the other branches
def init_branch(branch, start_balance, branches):
    
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        s.connect((branch.ip, branch.port))
    except socket.error:
        print("Can't connect to %s" %(branch.name))
        sys.exit(1)

    init_branch = bank.InitBranch()
    init_branch.balance = start_balance

    # TODO is this correct?
    init_branch.all_branches.add()
    init_branch.all_branches.extend(branches)

    branch_message = bank.BranchMessage()
    branch_message.init_branch.CopyFrom(init_branch)
    transport.send__message(s, branch_message)
    



if __name__ == '__main__':
    main(sys.argv)
